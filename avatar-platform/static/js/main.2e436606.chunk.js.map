{"version":3,"sources":["services/canvas.js","services/backend.js","reducers/preview.js","components/spinner/Spinner.js","components/preview/Preview.js","components/button-actions/ButtonActions.js","components/face-part-container/FacePartContainer.js","components/color-picker/pipette.svg","components/color-picker/ColorPicker.js","face-parts/Base.js","components/main-tabs/MainTabs.js","App.js","serviceWorker.js","index.js"],"names":["canvas","document","createElement","context","getContext","width","height","changeImageColor","url","color","Promise","resolve","reject","img","src","onload","clearRect","drawImage","alpha","imageSmoothingQuality","globalCompositeOperation","fillStyle","fillRect","colorize","toDataURL","API_URL","process","console","log","axiosInstance","axios","create","headers","Content-Type","saveImage","dispatch","getState","data","current","type","method","responseType","params","backend","then","response","saveAs","Blob","Math","floor","random","payload","catch","e","changeColor","part","partsDataOriginal","images","forEach","el","value","id","randomizeFace","PARTS_WITH_COLORS","r","toString","padStart","g","b","PARTS","index","partsData","length","getCurrentValues","state","entries","Object","values","_loop","i","key","find","push","zIndex","sort","a","map","v","reducer","initialState","handlers","arguments","undefined","action","hasOwnProperty","createReducer","previewIsLoading","SELECT_PART","_ref","_ref$payload","objectSpread","defineProperty","SET_COLOR","_ref2","_ref2$payload","newPartImages","concat","SET_PREVIEW_IS_LOADING","_ref3","LOAD_FACE_PARTS_SUCCESS","_ref4","cloneDeep","keys","pickBy","colors","Spinner","_ref$width","_ref$height","react_default","className","style","connect","items","classNames","item","alt","onClick","FacePartContainer","active","selectPart","_extends","assign","target","source","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","pipette_ref2","d","pipette_ref3","pipette_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","pipette_SvgPipette","svgRef","props","x","y","viewBox","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","__webpack_require__","p","_useState","useState","_useState2","slicedToArray","showPicker","setShowPicker","background","lib","disableAlpha","onChange","hex","noColors","color_picker_ColorPicker","esm","defaultIndex","title","face_parts_Base","App","loadFaceParts","preview_Preview","button_actions_ButtonActions","main_tabs_MainTabs","React","Component","get","setTimeout","Boolean","window","location","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e436606.chunk.js","sourcesContent":["var canvas = document.createElement(\"canvas\"), // shared instance\r\n  context = canvas.getContext(\"2d\");\r\n\r\n// set image pixel size and hex color\r\ncanvas.width = 600;\r\ncanvas.height = 600;\r\n\r\nexport const changeImageColor = (url, color) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let img = document.createElement('img');\r\n    img.src = url;\r\n    img.onload = () => {\r\n\r\n      context.clearRect(0, 0, canvas.width, canvas.height);\r\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n      colorize(color, 1);\r\n\r\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n\r\n      resolve(canvas.toDataURL(\"image/png\", 1));\r\n    }\r\n  })\r\n\r\n\r\n  function colorize(color, alpha) {\r\n\r\n    context.imageSmoothingQuality = \"high\";\r\n    context.globalCompositeOperation = \"source-atop\";\r\n    context.fillStyle = color;\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n    context.globalCompositeOperation = \"multiply\";\r\n  }\r\n}\r\n\r\n","import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/';\r\nconsole.log(API_URL);\r\n\r\nconst axiosInstance = axios.create({\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\nexport function getFaceParts() {\r\n  return axiosInstance.get(API_URL + 'face-parts');\r\n}\r\n\r\nexport function saveImage(data) {\r\n  //return axiosInstance.get('http://localhost:3001/' + 'save-image',);\r\n  return axios({\r\n    url: API_URL + 'save-image',\r\n    method: 'GET',\r\n    responseType: 'blob', // important,\r\n    params: { data }\r\n  })\r\n}\r\n","import { createSelector } from 'reselect'\r\nimport { changeImageColor } from '../services/canvas'\r\nimport * as backend from '../services/backend'\r\nimport { cloneDeep, pickBy } from 'lodash'\r\nimport { saveAs } from 'file-saver';\r\n\r\n\r\nconst initialState = {\r\n  partsDataOriginal: {},\r\n  partsData: {},\r\n  PARTS: [],\r\n  PARTS_WITH_COLORS: [],\r\n  current: {},\r\n  previewIsLoading: false,\r\n  // current: {\r\n  //   head: {\r\n  //     id: null,\r\n  //     color: null\r\n  //   }\r\n  // }\r\n};\r\n\r\nexport function createReducer(initialState, handlers) {\r\n  return function reducer(state = initialState, action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action)\r\n    } else {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\n// ACTIONS\r\n\r\nexport const loadFaceParts = () => (dispatch) => {\r\n  dispatch({ type: 'LOAD_FACE_PARTS_REQUEST' });\r\n  backend.getFaceParts().then(response => {\r\n    dispatch({ type: 'LOAD_FACE_PARTS_SUCCESS', payload: response });\r\n    setTimeout(() => {\r\n      dispatch(randomizeFace());\r\n    })\r\n  }).catch(e => {\r\n    dispatch({ type: 'LOAD_FACE_PARTS_FAILURE', payload: e });\r\n  })\r\n}\r\n\r\nexport const saveImage = () => (dispatch, getState) => {\r\n  const data = getState().current;\r\n  dispatch({ type: 'SAVE_IMAGE_REQUEST' });\r\n  backend.saveImage(data).then(response => {\r\n    saveAs(new Blob([response.data]), 'image' + Math.floor(Math.random() * 100000 + 1) + '.png');\r\n    dispatch({ type: 'SAVE_IMAGE_SUCCESS', payload: response });\r\n\r\n  }).catch(e => {\r\n    dispatch({ type: 'SAVE_IMAGE_FAILURE', payload: e });\r\n  })\r\n}\r\n\r\nexport const changeColor = (part, color) => (dispatch, getState) => {\r\n  getState().partsDataOriginal[part].images.forEach(el => {\r\n    changeImageColor(el.value, color).then((value) => {\r\n      dispatch({ type: 'SET_COLOR', payload: { id: el.id, part, value, color } })\r\n    })\r\n  })\r\n}\r\n\r\nexport const randomizeFace = () => (dispatch, getState) => {\r\n\r\n  //dispatch({ type: 'SET_PREVIEW_IS_LOADING', value: true})\r\n\r\n  getState().PARTS_WITH_COLORS.forEach(part => {\r\n    let r = Math.floor(Math.random() * 255).toString(16).padStart(2, '0')\r\n    let g = Math.floor(Math.random() * 255).toString(16).padStart(2, '0')\r\n    let b = Math.floor(Math.random() * 255).toString(16).padStart(2, '0')\r\n    dispatch(changeColor(part, '#' + r + g + b))\r\n  })\r\n\r\n  getState().PARTS.forEach(part => {\r\n    let index = Math.floor(Math.random() * getState().partsData[part].images.length)\r\n    let id = getState().partsData[part].images[index].id\r\n    dispatch({type: 'SELECT_PART', payload: {id, part }})\r\n  })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// SELECTORS\r\n//\r\nexport const getCurrentValues = state => {\r\n  let entries = Object.entries(state.partsData);\r\n  let values = [];\r\n  for (let i = 0; i < entries.length; i ++) {\r\n    let key = entries[i][0];\r\n    if (!state.current[key]) continue;\r\n    let value = entries[i][1].images.find(el => el.id == state.current[key].id)\r\n    values.push({\r\n      zIndex: entries[i][1].zIndex,\r\n      value: value\r\n    });\r\n  }\r\n  values = values.sort((a, b) => a.zIndex - b.zIndex)\r\n  values = values.map(v => v.value && v.value.value)\r\n  return values\r\n}\r\n\r\n// REDUCER\r\n\r\nconst reducer = createReducer(initialState, {\r\n  SELECT_PART: function(state, { payload: { id, part }}) {\r\n    return {\r\n      ...state,\r\n      current: {\r\n        ...state.current,\r\n        [part]: {\r\n          ...state.current[part],\r\n          id: id,\r\n        }\r\n      }\r\n    }\r\n  },\r\n  SET_COLOR: function(state, { payload: {id, part, value, color }}) {\r\n    let newPartImages = [].concat(state.partsData[part].images)\r\n    newPartImages.find(el => el.id == id).value = value;\r\n    return {\r\n      ...state,\r\n      partsData: {\r\n        ...state.partsData,\r\n        [part]: {\r\n          ...state.partsData[part],\r\n          images: newPartImages\r\n        }\r\n      },\r\n      current: {\r\n        ...state.current,\r\n        [part]: {\r\n          ...state.current[part],\r\n          color\r\n        }\r\n      }\r\n    }\r\n  },\r\n  SET_PREVIEW_IS_LOADING: function(state, { value }) {\r\n    return {\r\n      ...state,\r\n      previewIsLoading: value\r\n    }\r\n  },\r\n  LOAD_FACE_PARTS_SUCCESS: function(state, { payload }) {\r\n    return {\r\n      ...state,\r\n      partsData: cloneDeep(payload.data),\r\n      partsDataOriginal: cloneDeep(payload.data),\r\n      PARTS: Object.keys(payload.data),\r\n      PARTS_WITH_COLORS: Object.keys(pickBy(payload.data, part => part.colors && part.colors.length))\r\n    }\r\n  }\r\n});\r\n\r\nexport default reducer\r\n","import React from 'react';\r\nimport './spinner.scss'\r\n\r\nexport default function Spinner ({width = 300, height = 300}) {\r\n  return (\r\n    <div className=\"spinner\" style={{width, height}}>Loading...</div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { getCurrentValues } from '../../reducers/preview'\r\nimport Spinner from '../spinner'\r\nimport classNames from 'classnames'\r\nimport './preview.scss'\r\n\r\nfunction Preview({ items, previewIsLoading }) {\r\n  return (\r\n    <div className={classNames('Preview', previewIsLoading && 'isLoading')}>\r\n      <div className=\"images\">\r\n        {\r\n          items.map((item, index) => (\r\n            <img src={item} key={index} alt=\"\"/>\r\n          ))\r\n        }\r\n      </div>\r\n      <Spinner />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default connect(\r\n  state => ({\r\n    items: getCurrentValues(state),\r\n    current: state.current,\r\n    previewIsLoading: state.previewIsLoading\r\n  })\r\n)(Preview)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { randomizeFace, saveImage } from '../../reducers/preview'\r\nimport './button-actions.scss'\r\n\r\nfunction ButtonActions({ randomizeFace, saveImage, current }) {\r\n  return (\r\n    <div className=\"ButtonActions\">\r\n      <button className=\"btn btn-primary btn-wide mb-2\" onClick={randomizeFace}>\r\n        Random\r\n      </button>\r\n      <br/>\r\n      <button className=\"btn btn-primary btn-wide\" onClick={saveImage}>\r\n        Download\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  null,\r\n  dispatch => ({\r\n    randomizeFace: () => dispatch(randomizeFace()),\r\n    saveImage: () => dispatch(saveImage())\r\n  })\r\n)(ButtonActions)\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './face-part-container.scss'\r\nimport classNames from 'classnames'\r\n\r\nexport default function FacePartContainer ({id, active, part, url, selectPart}) {\r\n  return (\r\n    <div className={classNames('FacePartContainer', active && 'active')} onClick={() => selectPart(id, part)}>\r\n      <img className=\"one\" src={url} alt=\"\"/>\r\n    </div>\r\n  )\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M489.265,22.762C474.586,8.083,455.071,0,434.313,0s-40.273,8.083-54.951,22.762L221.761,180.361 c-9.158-4.089-20.268-2.402-27.783,5.111c-9.733,9.731-9.733,25.511,0,35.244l8.448,8.448L54.402,377.189 c-2.564,2.564-4.537,5.656-5.782,9.06l-15.674,42.847c-7.766,1.691-14.9,5.556-20.652,11.309 c-7.925,7.923-12.288,18.457-12.288,29.663c0,11.203,4.363,21.738,12.288,29.663c8.178,8.176,18.921,12.265,29.662,12.265 s21.484-4.089,29.662-12.265c0-0.002,0.002-0.002,0.002-0.003c5.752-5.754,9.618-12.886,11.309-20.65l42.847-15.674 c3.404-1.246,6.496-3.22,9.06-5.782l148.026-148.026l8.448,8.448c4.866,4.866,11.245,7.3,17.621,7.3 c6.377,0,12.757-2.434,17.621-7.3c7.515-7.515,9.201-18.625,5.111-27.783l157.601-157.599 C519.565,102.365,519.565,53.063,489.265,22.762z M41.957,477.967c-2.08-0.002-4.115-0.846-5.582-2.313 c-1.47-1.47-2.313-3.504-2.313-5.582s0.842-4.112,2.311-5.581l11.165,11.163C46.069,477.125,44.033,477.967,41.957,477.967z  M47.537,475.653l-11.163-11.165c1.539-1.538,3.559-2.308,5.579-2.308c2.022,0,4.044,0.771,5.584,2.309 c1.469,1.47,2.311,3.504,2.311,5.582S49.006,474.186,47.537,475.653z M103.481,418.489l-15.681,5.737l5.737-15.681 l144.133-144.133l9.944,9.944L103.481,418.489z M454.019,97.422L297.594,253.847l-39.414-39.414L414.607,58.008 c5.263-5.265,12.261-8.164,19.706-8.164c7.445,0,14.443,2.899,19.706,8.163C464.887,68.873,464.887,86.555,454.019,97.422z\"\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref17 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgPipette = function SvgPipette(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 511.997 511.997\",\n    style: {\n      enableBackground: \"new 0 0 511.997 511.997\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPipette, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/pipette.1fc4aeaa.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { changeColor } from '../../reducers/preview'\r\nimport './color-picker.scss'\r\nimport { ChromePicker } from 'react-color'\r\nimport { ReactComponent as Pipette } from './pipette.svg'\r\n\r\nfunction ColorPicker({ part, changeColor, partsData }) {\r\n  const [showPicker, setShowPicker] = useState(false)\r\n  const colors = partsData[part].colors;\r\n  if (!colors || !colors.length) return null;\r\n  return (\r\n    <div className=\"ColorPicker\">\r\n      <div className=\"color color-pipette\"\r\n         onClick={() => {\r\n           setShowPicker(!showPicker)\r\n         }}><Pipette/>\r\n      </div>\r\n      {colors.map(color => (\r\n       <div className=\"color\"\r\n            style={{background: color}}\r\n            key={color}\r\n            onClick={() => changeColor(part, color)}>\r\n       </div>\r\n      ))}\r\n      { showPicker && <ChromePicker className=\"chromePicker\" disableAlpha={true} onChange={(color) => changeColor(part, color.hex)}/> }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default connect(\r\n  state => ({\r\n    partsData: state.partsData\r\n  }),\r\n  dispatch => ({\r\n    changeColor: (part, color) => dispatch(changeColor(part, color)),\r\n  })\r\n)(ColorPicker)\r\n","import React from 'react';\r\nimport FacePartContainer from '../components/face-part-container'\r\nimport { connect } from 'react-redux'\r\nimport { changeColor } from '../reducers/preview'\r\nimport ColorPicker from '../components/color-picker'\r\n\r\nfunction Base({items, current, changeColor, selectPart, part, noColors}) {\r\n  return (\r\n    <div>\r\n      {items && items[part] && items[part].images && items[part].images.length &&\r\n        items[part].images.map(item => (\r\n        <FacePartContainer\r\n          active={current && current[part] && (current[part].id === item.id)}\r\n          key={item.id}\r\n          id={item.id}\r\n          part={part}\r\n          url={item.value}\r\n          selectPart={selectPart}\r\n        />\r\n      ))}\r\n      <br/>\r\n      { !noColors && <ColorPicker part={part} /> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    items: state.partsData,\r\n    current: state.current\r\n  }),\r\n  dispatch => ({\r\n    changeColor: (part, color) => dispatch(changeColor(part, color)),\r\n    selectPart: (id, part) => dispatch({ type: 'SELECT_PART', payload: {id, part} })\r\n  })\r\n)(Base)\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './main-tabs.scss'\r\nimport { Tab, TabList, TabPanel, Tabs } from 'react-tabs'\r\nimport Base from '../../face-parts/Base'\r\n\r\nfunction MainTabs({ PARTS, partsData }) {\r\n  if (!PARTS || !PARTS.length) {\r\n    return <div></div>\r\n  }\r\n  return (\r\n    <div className=\"MainTabs\">\r\n      <Tabs defaultIndex={0}>\r\n        <TabList>\r\n          {PARTS.map(part => (\r\n            <Tab>{partsData[part].title}</Tab>\r\n          ))}\r\n        </TabList>\r\n\r\n        {PARTS.map(part => (\r\n          <TabPanel>\r\n            <Base part={part}/>\r\n          </TabPanel>\r\n        ))}\r\n\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    PARTS: state.PARTS,\r\n    partsData: state.partsData\r\n  })\r\n)(MainTabs)\r\n","import React from 'react';\nimport Preview from './components/preview'\nimport ButtonActions from './components/button-actions'\nimport { loadFaceParts } from './reducers/preview'\nimport MainTabs from './components/main-tabs'\n\nimport \"react-tabs/style/react-tabs.css\";\nimport './App.scss';\nimport { connect } from 'react-redux'\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.loadFaceParts()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <aside className=\"App-left-col\">\n          <div className=\"left-col-container\">\n            <Preview />\n            <br/>\n            <ButtonActions />\n          </div>\n        </aside>\n        <main className=\"App-main\">\n          <MainTabs />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    loadFaceParts\n  }\n)(App)\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport reducer from './reducers/preview'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\nimport ReduxThunk from 'redux-thunk'\n\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(ReduxThunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}