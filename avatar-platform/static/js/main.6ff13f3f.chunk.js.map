{"version":3,"sources":["services/canvas.js","services/backend.js","reducers/preview.js","components/spinner/Spinner.js","components/preview/Preview.js","components/button-actions/ButtonActions.js","components/face-part-container/FacePartContainer.js","components/color-picker/pipette.svg","components/color-picker/ColorPicker.js","face-parts/Base.js","components/main-tabs/MainTabs.js","components/avatar-page/AvatarPage.js","components/select-set/SelectSet.js","App.js","serviceWorker.js","index.js"],"names":["canvas","document","createElement","context","getContext","width","height","changeImageColor","url","color","Promise","resolve","reject","img","src","onload","clearRect","drawImage","alpha","imageSmoothingQuality","globalCompositeOperation","fillStyle","fillRect","colorize","toDataURL","API_URL","process","console","log","axiosInstance","axios","create","headers","Content-Type","saveImage","dispatch","getState","data","current","type","method","responseType","params","backend","then","response","saveAs","Blob","Math","floor","random","payload","catch","e","changeColor","part","partsDataOriginal","images","forEach","el","value","id","randomizeFace","index","partsData","PARTS_WITH_COLORS","includes","i","length","isLoading","r","toString","padStart","g","b","PARTS","getCurrentValues","state","entries","Object","values","_loop","key","find","push","zIndex","sort","a","map","v","getPreviewIsLoading","reducer","initialState","handlers","arguments","undefined","action","hasOwnProperty","createReducer","previewIsLoading","sets","SELECT_PART","_ref","_ref$payload","objectSpread","defineProperty","SET_COLOR","_ref2","_ref2$payload","newPartImages","concat","SET_PREVIEW_IS_LOADING","_ref3","GET_SETS_SUCCESS","_ref4","LOAD_FACE_PARTS_SUCCESS","_ref5","newPartsData","cloneDeep","keys","pickBy","colors","Spinner","_ref$width","_ref$height","react_default","className","style","connect","items","setName","classNames","react_router_dom","to","item","alt","onClick","FacePartContainer","active","selectPart","_extends","assign","target","source","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","pipette_ref2","d","pipette_ref3","pipette_ref4","pipette_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","pipette_SvgPipette","svgRef","props","x","y","viewBox","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","__webpack_require__","p","_useState","useState","_useState2","slicedToArray","showPicker","setShowPicker","background","lib","disableAlpha","onChange","hex","noColors","color_picker_ColorPicker","esm","defaultIndex","title","face_parts_Base","loadFaceParts","get","setTimeout","useEffect","match","preview_Preview","button_actions_ButtonActions","main_tabs_MainTabs","getSets","App","basename","react_router","path","exact","component","SelectSet","AvatarPage","React","Component","Boolean","window","location","hostname","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","ReactDOM","render","es","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ff13f3f.chunk.js","sourcesContent":["var canvas = document.createElement(\"canvas\"), // shared instance\r\n  context = canvas.getContext(\"2d\");\r\n\r\n// set image pixel size and hex color\r\ncanvas.width = 600;\r\ncanvas.height = 600;\r\n\r\nexport const changeImageColor = (url, color) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let img = document.createElement('img');\r\n    img.src = url;\r\n    img.onload = () => {\r\n\r\n      context.clearRect(0, 0, canvas.width, canvas.height);\r\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n      colorize(color, 1);\r\n\r\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n\r\n      resolve(canvas.toDataURL(\"image/png\", 1));\r\n    }\r\n  })\r\n\r\n\r\n  function colorize(color, alpha) {\r\n\r\n    context.imageSmoothingQuality = \"high\";\r\n    context.globalCompositeOperation = \"source-atop\";\r\n    context.fillStyle = color;\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n    context.globalCompositeOperation = \"multiply\";\r\n  }\r\n}\r\n\r\n","import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/';\r\nconsole.log(API_URL);\r\n\r\nconst axiosInstance = axios.create({\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\nexport function getFaceParts(setName) {\r\n  return axiosInstance.get(API_URL + 'face-parts/' + setName);\r\n}\r\n\r\nexport function getSets() {\r\n  return axiosInstance.get(API_URL + 'face-parts/sets');\r\n}\r\n\r\nexport function saveImage(data) {\r\n  //return axiosInstance.get('http://localhost:3001/' + 'save-image',);\r\n  return axios({\r\n    url: API_URL + 'save-image',\r\n    method: 'GET',\r\n    responseType: 'blob', // important,\r\n    params: { data }\r\n  })\r\n}\r\n","import { createSelector } from 'reselect'\r\nimport { changeImageColor } from '../services/canvas'\r\nimport * as backend from '../services/backend'\r\nimport { cloneDeep, pickBy } from 'lodash'\r\nimport { saveAs } from 'file-saver';\r\n\r\n\r\nconst initialState = {\r\n  partsDataOriginal: {},\r\n  partsData: {},\r\n  PARTS: [],\r\n  PARTS_WITH_COLORS: [],\r\n  current: {},\r\n  previewIsLoading: false,\r\n  sets: []\r\n  // current: {\r\n  //   head: {\r\n  //     id: null,\r\n  //     color: null\r\n  //   }\r\n  // }\r\n};\r\n\r\nexport function createReducer(initialState, handlers) {\r\n  return function reducer(state = initialState, action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action)\r\n    } else {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\n// ACTIONS\r\n\r\nexport const loadFaceParts = (setName) => (dispatch) => {\r\n  dispatch({ type: 'LOAD_FACE_PARTS_REQUEST' });\r\n  backend.getFaceParts(setName).then(response => {\r\n    dispatch({ type: 'LOAD_FACE_PARTS_SUCCESS', payload: response });\r\n    setTimeout(() => {\r\n      dispatch(randomizeFace());\r\n    }, 100);\r\n  }).catch(e => {\r\n    dispatch({ type: 'LOAD_FACE_PARTS_FAILURE', payload: e });\r\n  })\r\n}\r\n\r\nexport const getSets = () => (dispatch) => {\r\n  dispatch({ type: 'GET_SETS_REQUEST' });\r\n  backend.getSets().then(response => {\r\n    dispatch({ type: 'GET_SETS_SUCCESS', payload: response });\r\n\r\n  }).catch(e => {\r\n    dispatch({ type: 'GET_SETS_FAILURE', payload: e });\r\n  })\r\n}\r\n\r\nexport const saveImage = () => (dispatch, getState) => {\r\n  const data = getState().current;\r\n  dispatch({ type: 'SAVE_IMAGE_REQUEST' });\r\n  backend.saveImage(data).then(response => {\r\n    saveAs(new Blob([response.data]), 'image' + Math.floor(Math.random() * 100000 + 1) + '.png');\r\n    dispatch({ type: 'SAVE_IMAGE_SUCCESS', payload: response });\r\n\r\n  }).catch(e => {\r\n    dispatch({ type: 'SAVE_IMAGE_FAILURE', payload: e });\r\n  })\r\n}\r\n\r\nexport const changeColor = (part, color) => (dispatch, getState) => {\r\n  getState().partsDataOriginal[part].images.forEach(el => {\r\n    changeImageColor(el.value, color).then((value) => {\r\n      dispatch({ type: 'SET_COLOR', payload: { id: el.id, part, value, color } })\r\n    })\r\n  })\r\n}\r\n\r\nexport const randomizeFace = () => (dispatch, getState) => {\r\n\r\n  //dispatch({ type: 'SET_PREVIEW_IS_LOADING', value: true})\r\n  for (let index in getState().partsData) {\r\n    //if (!getState.PARTS_WITH_COLORS) return;\r\n    if (!getState().PARTS_WITH_COLORS.includes(index)) continue;\r\n    if (!getState().partsData[index].images) continue;\r\n    for (let i = 0; i < getState().partsData[index].images.length; i++) {\r\n      getState().partsData[index].images[i].isLoading = true;\r\n    }\r\n  }\r\n\r\n  getState().PARTS_WITH_COLORS.forEach(part => {\r\n    let r = Math.floor(Math.random() * 255).toString(16).padStart(2, '0')\r\n    let g = Math.floor(Math.random() * 255).toString(16).padStart(2, '0')\r\n    let b = Math.floor(Math.random() * 255).toString(16).padStart(2, '0')\r\n    dispatch(changeColor(part, '#' + r + g + b))\r\n  })\r\n\r\n  getState().PARTS.forEach(part => {\r\n    if (!getState().partsData[part].images.length) return\r\n    let index = Math.floor(Math.random() * getState().partsData[part].images.length)\r\n    let id = getState().partsData[part].images[index].id\r\n    dispatch({type: 'SELECT_PART', payload: {id, part }})\r\n  })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// SELECTORS\r\n//\r\nexport const getCurrentValues = state => {\r\n  let entries = Object.entries(state.partsData);\r\n  let values = [];\r\n  for (let i = 0; i < entries.length; i ++) {\r\n    let key = entries[i][0];\r\n    if (!state.current[key]) continue;\r\n    let value = entries[i][1].images.find(el => el.id == state.current[key].id)\r\n    values.push({\r\n      zIndex: entries[i][1].zIndex,\r\n      value: value\r\n    });\r\n  }\r\n  values = values.sort((a, b) => a.zIndex - b.zIndex)\r\n  values = values.map(v => v.value && v.value.value)\r\n  return values\r\n}\r\n\r\nexport const getPreviewIsLoading = state => {\r\n  let isLoading = false;\r\n  if (!state.partsData) return true;\r\n  for (let index in state.partsData) {\r\n    for (let i = 0; i < state.partsData[index].images.length; i++) {\r\n      if (state.partsData[index].images[i].isLoading) {\r\n        isLoading = true;\r\n      }\r\n    }\r\n  }\r\n  return isLoading;\r\n}\r\n\r\n// REDUCER\r\n\r\nconst reducer = createReducer(initialState, {\r\n  SELECT_PART: function(state, { payload: { id, part }}) {\r\n    return {\r\n      ...state,\r\n      current: {\r\n        ...state.current,\r\n        [part]: {\r\n          ...state.current[part],\r\n          id: id,\r\n        }\r\n      }\r\n    }\r\n  },\r\n  SET_COLOR: function(state, { payload: {id, part, value, color }}) {\r\n    let newPartImages = [].concat(state.partsData[part].images)\r\n    newPartImages.find(el => el.id == id).value = value;\r\n    newPartImages.find(el => el.id == id).isLoading = false;\r\n    return {\r\n      ...state,\r\n      partsData: {\r\n        ...state.partsData,\r\n        [part]: {\r\n          ...state.partsData[part],\r\n          images: newPartImages\r\n        }\r\n      },\r\n      current: {\r\n        ...state.current,\r\n        [part]: {\r\n          ...state.current[part],\r\n          color\r\n        }\r\n      }\r\n    }\r\n  },\r\n  SET_PREVIEW_IS_LOADING: function(state, { value }) {\r\n    return {\r\n      ...state,\r\n      previewIsLoading: value\r\n    }\r\n  },\r\n  GET_SETS_SUCCESS: function(state, { payload }) {\r\n    return {\r\n      ...state,\r\n      sets: payload.data\r\n    }\r\n  },\r\n  LOAD_FACE_PARTS_SUCCESS: function(state, { payload }) {\r\n    let newPartsData =  cloneDeep(payload.data);\r\n    newPartsData.forEach(part => {\r\n      part.images && part.images.forEach(img => {\r\n        img.isLoading = false;\r\n      })\r\n    })\r\n    return {\r\n      ...state,\r\n      partsData: newPartsData,\r\n      partsDataOriginal: cloneDeep(newPartsData),\r\n      PARTS: Object.keys(payload.data),\r\n      PARTS_WITH_COLORS: Object.keys(pickBy(payload.data, part => part.colors && part.colors.length))\r\n    }\r\n  }\r\n});\r\n\r\nexport default reducer\r\n","import React from 'react';\r\nimport './spinner.scss'\r\n\r\nexport default function Spinner ({width = 300, height = 300}) {\r\n  return (\r\n    <div className=\"spinner\" style={{width, height}}>Loading...</div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { getCurrentValues, getPreviewIsLoading } from '../../reducers/preview'\r\nimport Spinner from '../spinner'\r\nimport classNames from 'classnames'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './preview.scss'\r\n\r\nfunction Preview({ items, previewIsLoading, setName }) {\r\n  return (\r\n    <div className={classNames('Preview', previewIsLoading && 'isLoading')}>\r\n      <div className=\"change-art\">\r\n        <Link to='../'>\r\n          <button className=\"btn btn-info\">\r\n              Change Art Set\r\n          </button>\r\n        </Link>\r\n\r\n      </div>\r\n      <div className=\"images\">\r\n        {\r\n          items.map((item, index) => (\r\n            <img src={item} key={index} alt=\"\"/>\r\n          ))\r\n        }\r\n      </div>\r\n      <Spinner />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default connect(\r\n  state => ({\r\n    items: getCurrentValues(state),\r\n    current: state.current,\r\n    previewIsLoading: getPreviewIsLoading(state)\r\n  })\r\n)(Preview)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { randomizeFace, saveImage } from '../../reducers/preview'\r\nimport './button-actions.scss'\r\n\r\nfunction ButtonActions({ randomizeFace, saveImage, current }) {\r\n  return (\r\n    <div className=\"ButtonActions\">\r\n      <button className=\"btn btn-primary btn-wide mb-2\" onClick={randomizeFace}>\r\n        Random\r\n      </button>\r\n      <br/>\r\n      <button className=\"btn btn-primary btn-wide\" onClick={saveImage}>\r\n        Download\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  null,\r\n  dispatch => ({\r\n    randomizeFace: () => dispatch(randomizeFace()),\r\n    saveImage: () => dispatch(saveImage())\r\n  })\r\n)(ButtonActions)\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './face-part-container.scss'\r\nimport classNames from 'classnames'\r\n\r\nexport default function FacePartContainer ({id, active, part, url, selectPart}) {\r\n  return (\r\n    <div className={classNames('FacePartContainer', active && 'active')} onClick={() => selectPart(id, part)}>\r\n      <img className=\"one\" src={url} alt=\"\"/>\r\n    </div>\r\n  )\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M489.265,22.762C474.586,8.083,455.071,0,434.313,0s-40.273,8.083-54.951,22.762L221.761,180.361 c-9.158-4.089-20.268-2.402-27.783,5.111c-9.733,9.731-9.733,25.511,0,35.244l8.448,8.448L54.402,377.189 c-2.564,2.564-4.537,5.656-5.782,9.06l-15.674,42.847c-7.766,1.691-14.9,5.556-20.652,11.309 c-7.925,7.923-12.288,18.457-12.288,29.663c0,11.203,4.363,21.738,12.288,29.663c8.178,8.176,18.921,12.265,29.662,12.265 s21.484-4.089,29.662-12.265c0-0.002,0.002-0.002,0.002-0.003c5.752-5.754,9.618-12.886,11.309-20.65l42.847-15.674 c3.404-1.246,6.496-3.22,9.06-5.782l148.026-148.026l8.448,8.448c4.866,4.866,11.245,7.3,17.621,7.3 c6.377,0,12.757-2.434,17.621-7.3c7.515-7.515,9.201-18.625,5.111-27.783l157.601-157.599 C519.565,102.365,519.565,53.063,489.265,22.762z M41.957,477.967c-2.08-0.002-4.115-0.846-5.582-2.313 c-1.47-1.47-2.313-3.504-2.313-5.582s0.842-4.112,2.311-5.581l11.165,11.163C46.069,477.125,44.033,477.967,41.957,477.967z  M47.537,475.653l-11.163-11.165c1.539-1.538,3.559-2.308,5.579-2.308c2.022,0,4.044,0.771,5.584,2.309 c1.469,1.47,2.311,3.504,2.311,5.582S49.006,474.186,47.537,475.653z M103.481,418.489l-15.681,5.737l5.737-15.681 l144.133-144.133l9.944,9.944L103.481,418.489z M454.019,97.422L297.594,253.847l-39.414-39.414L414.607,58.008 c5.263-5.265,12.261-8.164,19.706-8.164c7.445,0,14.443,2.899,19.706,8.163C464.887,68.873,464.887,86.555,454.019,97.422z\"\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref16 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref17 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgPipette = function SvgPipette(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 511.997 511.997\",\n    style: {\n      enableBackground: \"new 0 0 511.997 511.997\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPipette, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/pipette.1fc4aeaa.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { changeColor } from '../../reducers/preview'\r\nimport './color-picker.scss'\r\nimport { ChromePicker } from 'react-color'\r\nimport { ReactComponent as Pipette } from './pipette.svg'\r\n\r\nfunction ColorPicker({ part, changeColor, partsData }) {\r\n  const [showPicker, setShowPicker] = useState(false)\r\n  const colors = partsData[part].colors;\r\n  if (!colors || !colors.length) return null;\r\n  return (\r\n    <div className=\"ColorPicker\">\r\n      <div className=\"color color-pipette\"\r\n         onClick={() => {\r\n           setShowPicker(!showPicker)\r\n         }}><Pipette/>\r\n      </div>\r\n      {colors.map(color => (\r\n       <div className=\"color\"\r\n            style={{background: color}}\r\n            key={color}\r\n            onClick={() => changeColor(part, color)}>\r\n       </div>\r\n      ))}\r\n      { showPicker && <ChromePicker className=\"chromePicker\" disableAlpha={true} onChange={(color) => changeColor(part, color.hex)}/> }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default connect(\r\n  state => ({\r\n    partsData: state.partsData\r\n  }),\r\n  dispatch => ({\r\n    changeColor: (part, color) => dispatch(changeColor(part, color)),\r\n  })\r\n)(ColorPicker)\r\n","import React from 'react';\r\nimport FacePartContainer from '../components/face-part-container'\r\nimport { connect } from 'react-redux'\r\nimport { changeColor } from '../reducers/preview'\r\nimport ColorPicker from '../components/color-picker'\r\n\r\nfunction Base({items, current, changeColor, selectPart, part, noColors}) {\r\n  if (!(items && items[part] && items[part].images && items[part].images.length)) return 'No items on this layer'\r\n  return (\r\n    <div>\r\n      { items[part].images.map(item => (\r\n        <FacePartContainer\r\n          active={current && current[part] && (current[part].id === item.id)}\r\n          key={item.id}\r\n          id={item.id}\r\n          part={part}\r\n          url={item.value}\r\n          selectPart={selectPart}\r\n        />\r\n      ))}\r\n      <br/>\r\n      { !noColors && <ColorPicker part={part} /> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    items: state.partsData,\r\n    current: state.current\r\n  }),\r\n  dispatch => ({\r\n    changeColor: (part, color) => dispatch(changeColor(part, color)),\r\n    selectPart: (id, part) => dispatch({ type: 'SELECT_PART', payload: {id, part} })\r\n  })\r\n)(Base)\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './main-tabs.scss'\r\nimport { Tab, TabList, TabPanel, Tabs } from 'react-tabs'\r\nimport Base from '../../face-parts/Base'\r\n\r\nfunction MainTabs({ PARTS, partsData }) {\r\n  if (!PARTS || !PARTS.length) {\r\n    return <div></div>\r\n  }\r\n  return (\r\n    <div className=\"MainTabs\">\r\n      <Tabs defaultIndex={0}>\r\n        <TabList>\r\n          {PARTS.map((part, index) => (\r\n            <Tab key={index}>{partsData[part].title}</Tab>\r\n          ))}\r\n        </TabList>\r\n\r\n        {PARTS.map((part, index) => (\r\n          <TabPanel>\r\n            <Base  key={index} part={part}/>\r\n          </TabPanel>\r\n        ))}\r\n\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    PARTS: state.PARTS,\r\n    partsData: state.partsData\r\n  })\r\n)(MainTabs)\r\n","import React, {useEffect} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { randomizeFace, saveImage } from '../../reducers/preview'\r\nimport './avatar-page.scss'\r\n\r\nimport Preview from '../../components/preview'\r\nimport ButtonActions from '../../components/button-actions'\r\nimport { loadFaceParts } from '../../reducers/preview'\r\nimport MainTabs from '../../components/main-tabs'\r\n\r\n\r\nfunction AvatarPage(props) {\r\n\r\n  useEffect(() => {\r\n    props.loadFaceParts(props.match.params.setName);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"AvatarPage\">\r\n      <aside className=\"App-left-col\">\r\n        <div className=\"left-col-container\">\r\n          <Preview setName={props.match.params.setName}/>\r\n          <br/>\r\n          <ButtonActions />\r\n        </div>\r\n      </aside>\r\n      <main className=\"App-main\">\r\n        <MainTabs />\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    loadFaceParts\r\n  }\r\n)(AvatarPage)\r\n","import React, {useEffect} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { getSets } from '../../reducers/preview'\r\nimport './select-set.scss'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction SelectSet(props) {\r\n\r\n  useEffect(() => {\r\n    props.getSets()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"SelectSet\">\r\n      <h3>Select Art Set</h3>\r\n      <ul>\r\n        {props.sets.map(setName => (\r\n          <li>\r\n            <Link to={setName}>\r\n              {setName}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default connect(\r\n  state => ({\r\n    sets: state.sets\r\n  }),\r\n  {\r\n    getSets\r\n  }\r\n)(SelectSet)\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"react-tabs/style/react-tabs.css\";\nimport './App.scss';\nimport AvatarPage from './components/avatar-page'\nimport SelectSet from './components/select-set'\n\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router basename='/avatar-platform'>\n          <Switch>\n            <Route path=\"/\" exact component={SelectSet} />\n            <Route path=\"/:setName\" exact component={AvatarPage} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport reducer from './reducers/preview'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\nimport ReduxThunk from 'redux-thunk'\n\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(ReduxThunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}