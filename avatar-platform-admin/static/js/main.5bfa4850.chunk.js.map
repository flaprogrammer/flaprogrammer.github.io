{"version":3,"sources":["services/backend.js","components/spinner/Spinner.js","pages/layers/Layers.js","pages/layer-items/add.svg","pages/layer-items/LayerItems.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","process","console","log","axiosInstance","axios","create","headers","Content-Type","axiosFilesInstance","Spinner","_ref","_ref$width","width","_ref$height","height","position","react_default","a","createElement","className","classNames","style","Layers","props","_useState","useState","_useState2","Object","slicedToArray","tableData","setTableData","_useState3","_useState4","isLoading","setIsLoading","useEffect","get","then","response","data","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","map","row","hover","key","_id","onClick","history","push","component","scope","title","zIndex","colors","length","color","background","images","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","_ref3","fill","add_SvgAdd","svgRef","viewBox","ref","forwardRef","__webpack_require__","p","LayerItems","setData","onImageSubmit","acceptedFiles","fileToSend","id","FormData","append","post","postLayerItemsImages","match","params","onImageDelete","imageId","delete","deleteLayerItemImage","react_router_dom","to","image","src","value","alt","dist_es","onDrop","getRootProps","getInputProps","App","react_router","path","exact","React","Component","Boolean","window","location","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sZAEMA,EAAUC,4BAChBC,QAAQC,IAAIH,GAEZ,IAAMI,EAAgBC,IAAMC,OAAO,CACjCC,QAAS,CACPC,eAAgB,sBAIdC,EAAqBJ,IAAMC,OAAO,CACtCC,QAAS,CACPC,eAAgB,gCCTL,SAASE,EAATC,GAAyD,IAAAC,EAAAD,EAAtCE,aAAsC,IAAAD,EAA9B,IAA8BA,EAAAE,EAAAH,EAAzBI,cAAyB,IAAAD,EAAhB,IAAgBA,EAAXE,EAAWL,EAAXK,SAC3D,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAW,UAAyB,aAAbL,GAA4B,YAAaM,MAAO,CAACT,QAAOE,WAA/F,cCSW,SAASQ,EAAQC,GAAO,IAAAC,EAEHC,mBAAS,IAFNC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE9BK,EAF8BH,EAAA,GAEnBI,EAFmBJ,EAAA,GAAAK,EAGHN,oBAAS,GAHNO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAG9BE,EAH8BD,EAAA,GAGnBE,EAHmBF,EAAA,GAarC,OARAG,oBAAU,WACRD,GAAa,GFHR/B,EAAciC,IAAIrC,EAAU,gBEIrBsC,KAAK,SAACC,GAChBR,EAAaQ,EAASC,MACtBL,GAAa,MAEd,IAGDlB,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAOE,UAAU,qBACfH,EAAAC,EAAAC,cAAA,oBACCe,GAAajB,EAAAC,EAAAC,cAACT,EAAD,OACZwB,GACFjB,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,KACED,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,KACED,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,KACED,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,YACAD,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,cACAD,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,gBACAD,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,eACAD,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,0BAGJD,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,KACGY,EAAUiB,IAAI,SAAAC,GAAG,OAChB/B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAUE,UAAU,YAAY6B,OAAO,EAAMC,IAAKF,EAAIG,IAC5CC,QAAS,kBAAM5B,EAAM6B,QAAQC,KAAK,UAAYN,EAAIG,OAC1DlC,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAWqC,UAAU,KAAKC,MAAM,OAC7BR,EAAIE,KAEPjC,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAWqC,UAAU,KAAKC,MAAM,OAC7BR,EAAIS,OAEPxC,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAWqC,UAAU,KAAKC,MAAM,OAC7BR,EAAIU,QAEPzC,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAWqC,UAAU,KAAKC,MAAM,OAC5BR,EAAIW,QAAUX,EAAIW,OAAOC,OACzBZ,EAAIW,OAAOZ,IAAI,SAAAc,GAAK,OAClB5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQE,MAAO,CAACwC,WAAYD,OAE7C,aAGJ5C,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAWqC,UAAU,KAAKC,MAAM,OAC7BR,EAAIe,qBCjErB,SAAAC,IAAmR,OAA9PA,EAAApC,OAAAqC,QAAA,SAAAC,GAAgD,QAAAC,EAAA,EAAgBA,EAAAC,UAAAR,OAAsBO,IAAA,CAAO,IAAAE,EAAAD,UAAAD,GAA2B,QAAAjB,KAAAmB,EAA0BzC,OAAA0C,UAAAC,eAAAC,KAAAH,EAAAnB,KAAyDgB,EAAAhB,GAAAmB,EAAAnB,IAAiC,OAAAgB,IAAkBO,MAAAC,KAAAN,WAEnR,SAAAO,EAAAN,EAAAO,GAAqD,SAAAP,EAAA,SAA+B,IAA8DnB,EAAAiB,EAA9DD,EAEpF,SAAAG,EAAAO,GAA0D,SAAAP,EAAA,SAA+B,IAAuDnB,EAAAiB,EAAvDD,EAAA,GAAiBW,EAAAjD,OAAAkD,KAAAT,GAAkD,IAAAF,EAAA,EAAYA,EAAAU,EAAAjB,OAAuBO,IAAOjB,EAAA2B,EAAAV,GAAqBS,EAAAG,QAAA7B,IAAA,IAA0CgB,EAAAhB,GAAAmB,EAAAnB,IAA6B,OAAAgB,EAF9Mc,CAAAX,EAAAO,GAA0E,GAAAhD,OAAAqD,sBAAA,CAAoC,IAAAC,EAAAtD,OAAAqD,sBAAAZ,GAA6D,IAAAF,EAAA,EAAYA,EAAAe,EAAAtB,OAA6BO,IAAOjB,EAAAgC,EAAAf,GAA2BS,EAAAG,QAAA7B,IAAA,GAA0CtB,OAAA0C,UAAAa,qBAAAX,KAAAH,EAAAnB,KAAwEgB,EAAAhB,GAAAmB,EAAAnB,IAA+B,OAAAgB,EAM3d,IAAAkB,EAEAnE,EAAAC,EAAKC,cAAA,QACLkE,EAAA,wCAGAC,EAEArE,EAAAC,EAAKC,cAAA,QACLkE,EAAA,gBACAE,KAAA,SAGIC,EAAM,SAAA7E,GACV,IAAA8E,EAAA9E,EAAA8E,OACAjE,EAAAmD,EAAAhE,EAAA,YAEA,OAASM,EAAAC,EAAKC,cAAA,MAAA6C,EAAA,CACdnD,MAAA,GACAE,OAAA,GACA2E,QAAA,YACAC,IAAAF,GACGjE,GAAA4D,EAAAE,OAGcrE,EAAAC,EAAK0E,WAAA,SAAApE,EAAAmE,GACtB,OAAS1E,EAAAC,EAAKC,cAAeqE,EAAMxB,EAAA,CACnCyB,OAAAE,GACGnE,MAEYqE,EAAAC,iBC3BA,SAASC,EAAYvE,GAAO,IAAAC,EAEjBC,mBAAS,IAFQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAElCe,EAFkCb,EAAA,GAE5BqE,EAF4BrE,EAAA,GAAAK,EAGPN,oBAAS,GAHFO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGlCE,EAHkCD,EAAA,GAGvBE,EAHuBF,EAAA,GAazC,SAASgE,EAAcC,GACrB,IAAIC,EAAaD,EAAc,GAC/B/D,GAAa,GJAV,SAA8BiE,EAAID,GACvC,IAAI3D,EAAO,IAAI6D,SAIf,OAHA7D,EAAK8D,OAAO,QAASH,GACrB3D,EAAK8D,OAAO,OAAQ,SAEb7F,EAAmB8F,KAAKvG,EAAU,gBAAkBoG,EAAK,UAAW5D,GIJzEgE,CAAqBhF,EAAMiF,MAAMC,OAAON,GAAID,GACzC7D,KAAK,SAACC,GACLJ,GAAa,GACb6D,EAAQzD,EAASC,KAAK,MAI5B,SAASmE,EAAcC,GACrBzE,GAAa,GJDV,SAA8BiE,EAAIQ,GAEvC,OAAOxG,EAAcyG,OAAO7G,EAAU,gBAAkBoG,EAAK,WAAaQ,GIAxEE,CAAqBtF,EAAMiF,MAAMC,OAAON,GAAIQ,GACzCtE,KAAK,SAACC,GACLJ,GAAa,GACb6D,EAAQzD,EAASC,KAAK,MAI5B,OA3BAJ,oBAAU,WJML,IAAuBgE,EIL1BjE,GAAa,IJKaiE,EIJZ5E,EAAMiF,MAAMC,OAAON,GJK5BhG,EAAciC,IAAIrC,EAAU,gBAAkBoG,IILd9D,KAAK,SAACC,GACzCyD,EAAQzD,EAASC,KAAK,IACtBL,GAAa,MAEd,CAACX,EAAMiF,MAAMC,SAsBdzF,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAOE,UAAU,yBACfH,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,OAAT,kBACA/F,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKiB,OACTvB,GAAajB,EAAAC,EAAAC,cAACT,EAAD,CAASM,SAAS,aAChCC,EAAAC,EAAAC,cAAA,WACGqB,EAAKuB,QAAUvB,EAAKuB,OAAOhB,IAAI,SAACkE,GAAD,OAC9BhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAK+F,IAAKD,EAAME,MAAOC,IAAI,MAE7BnG,EAAAC,EAAAC,cAAA,UAAQiC,QAAS,kBAAMuD,EAAcM,EAAMb,MAA3C,cAINnF,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAUC,OAAQ,SAAApB,GAAa,OAAID,EAAcC,KAC9C,SAAAvF,GAAA,IAAE4G,EAAF5G,EAAE4G,aAAcC,EAAhB7G,EAAgB6G,cAAhB,OACCvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAAS,OAAAqC,OAAA,CAAK7C,UAAU,YAAemG,KAC5BtG,EAAAC,EAAAC,cAAA,QAAWqG,KACXvG,EAAAC,EAAAC,cAAA,qFCtDOsG,kMAGjB,OACExG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,KACE9F,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACrE,UAAWhC,IACjCN,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOC,KAAK,cAAcpE,UAAWwC,aAPd8B,IAAMC,YCEnBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASzB,MACvB,2DCVN0B,IAASC,OACPnH,EAAAC,EAAAC,cAACkH,EAAD,MACAC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpG,KAAK,SAAAqG,GACjCA,EAAaC","file":"static/js/main.5bfa4850.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/';\r\nconsole.log(API_URL);\r\n\r\nconst axiosInstance = axios.create({\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\nconst axiosFilesInstance = axios.create({\r\n  headers: {\r\n    'Content-Type': 'multipart/form-data',\r\n  }\r\n});\r\n\r\nexport function getLayers() {\r\n  return axiosInstance.get(API_URL + 'admin/layers');\r\n}\r\n\r\n\r\nexport function getLayerItems(id) {\r\n  return axiosInstance.get(API_URL + 'admin/layers/' + id);\r\n}\r\n\r\nexport function postLayerItemsImages(id, fileToSend) {\r\n  let data = new FormData();\r\n  data.append('image', fileToSend);\r\n  data.append('name', 'image');\r\n\r\n  return axiosFilesInstance.post(API_URL + 'admin/layers/' + id + '/images', data);\r\n}\r\n\r\nexport function deleteLayerItemImage(id, imageId) {\r\n\r\n  return axiosInstance.delete(API_URL + 'admin/layers/' + id + '/images/' + imageId);\r\n}\r\n\r\nexport function saveImage(data) {\r\n  //return axiosInstance.get('http://localhost:3001/' + 'save-image',);\r\n  return axios({\r\n    url: API_URL + 'save-image',\r\n    method: 'GET',\r\n    responseType: 'blob', // important,\r\n    params: { data }\r\n  })\r\n}\r\n","import React from 'react';\r\nimport './spinner.scss'\r\nimport classNames from 'classnames'\r\n\r\nexport default function Spinner ({width = 200, height = 200, position}) {\r\n  return (\r\n    <div className={classNames('spinner', (position === 'absolute') && 'absolute')} style={{width, height}}>Loading...</div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './layers.scss'\r\nimport classNames from 'classnames'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { getLayers } from '../../services/backend'\r\nimport Spinner from '../../components/spinner'\r\n\r\nexport default function Layers (props) {\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    getLayers().then((response) => {\r\n      setTableData(response.data);\r\n      setIsLoading(false);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <Paper className=\"Paper-main Layers\">\r\n      <h2>Layers</h2>\r\n      {isLoading && <Spinner />}\r\n      {!isLoading &&\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Key</TableCell>\r\n            <TableCell>Title</TableCell>\r\n            <TableCell>Z-index</TableCell>\r\n            <TableCell>Colors</TableCell>\r\n            <TableCell>Images quantity</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {tableData.map(row => (\r\n            <TableRow className=\"table-row\" hover={true} key={row._id}\r\n                      onClick={() => props.history.push('layers/' + row._id)}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.key}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.title}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.zIndex}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {(row.colors && row.colors.length) ?\r\n                  row.colors.map(color => (\r\n                    <div className=\"color\" style={{background: color}}></div>\r\n                  )) :\r\n                  'No colors'\r\n                }\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.images}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      }\r\n    </Paper>\r\n  )\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar SvgAdd = function SvgAdd(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgAdd, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/add.ca3efbf7.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useState, useEffect, createRef} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './layer-items.scss'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { getLayerItems, postLayerItemsImages, deleteLayerItemImage } from '../../services/backend'\r\nimport { ReactComponent as AddIcon } from './add.svg'\r\nimport Dropzone from 'react-dropzone'\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../../components/spinner\";\r\n\r\n\r\nexport default function LayerItems (props) {\r\n\r\n  const [data, setData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    getLayerItems(props.match.params.id).then((response) => {\r\n      setData(response.data[0]);\r\n      setIsLoading(false);\r\n    })\r\n  }, [props.match.params]);\r\n\r\n  function onImageSubmit(acceptedFiles) {\r\n    let fileToSend = acceptedFiles[0];\r\n    setIsLoading(true);\r\n    postLayerItemsImages(props.match.params.id, fileToSend)\r\n      .then((response) => {\r\n        setIsLoading(false);\r\n        setData(response.data[0]);\r\n      })\r\n  }\r\n\r\n  function onImageDelete(imageId) {\r\n    setIsLoading(true);\r\n    deleteLayerItemImage(props.match.params.id, imageId)\r\n      .then((response) => {\r\n        setIsLoading(false);\r\n        setData(response.data[0]);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Paper className=\"Paper-main LayerItems\">\r\n      <Link to='../'>Back to Layers</Link>\r\n      <h2>Layer images</h2>\r\n      <h3>{data.title}</h3>\r\n      {isLoading && <Spinner position=\"absolute\"/>}\r\n      <div>\r\n        {data.images && data.images.map((image) => (\r\n          <div className=\"image-container\">\r\n            <div className=\"image-wrapper\">\r\n              <img src={image.value} alt=\"\"/>\r\n            </div>\r\n            <button onClick={() => onImageDelete(image.id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Dropzone onDrop={acceptedFiles => onImageSubmit(acceptedFiles)}>\r\n        {({getRootProps, getInputProps}) => (\r\n          <div className=\"container\">\r\n            <div className=\"dropzone\" {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              <p>Drag 'n' drop some files here, or click to select files</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n    </Paper>\r\n  )\r\n}\r\n","import React from 'react';\nimport Layers from './pages/layers'\nimport LayerItems from './pages/layer-items'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport \"react-tabs/style/react-tabs.css\";\nimport './App.scss';\nimport { connect } from 'react-redux'\n\n\nexport default class App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Route path=\"/\" exact component={Layers} />\n          <Route path=\"/layers/:id\" component={LayerItems} />\n        </Router>\n      </div>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}